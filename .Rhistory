whichNum*whichOth*orderNum*orderOth
}
basicFarkleProb <- function(dice) {
den <- 6^dice
num <- 4^dice #Probability of no 1s or 5s
nKinds<-NULL
if (dice >= 3) {
for (n in c(3:dice)) {
nKinds<-c(nKinds,NofAKind(n,dice))
}
}
(num-sum(nKinds))/den
}
p <-NULL
for (k in c(1:6)) { p <- c(p, basicFarkleProb(k)) } ; p
basicFarkleProb(4)
NofAKind <- function(n,dice) {
whichNum <- choose(6,1)
whichOth <- choose(5,dice-n)
orderNum <- choose(dice,n)
orderOth <- factorial(dice-n)
whichNum*whichOth*orderNum*orderOth
}
basicFarkleProb <- function(dice) {
den <- 6^dice
num <- 4^dice #Probability of no 1s or 5s
nKinds<-NULL
if (dice >= 3) {
for (n in c(3:dice)) {
nKinds<-c(nKinds,NofAKind(n,dice))
}
}
(num-sum((4/6)*nKinds))/den
}
p <-NULL
for (k in c(1:6)) { p <- c(p, basicFarkleProb(k)) } ; p
clear()
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("./Coursera/Reproducible Research/Project1")
list.files
list.files()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(activity.byDay)
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps",binwidth=1000)
hist
?qplot
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps",binwidth=1000,fill="lightblue",colour="darkblue")
hist
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps",binwidth=1000,fill="lightblue")
hist
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps",binwidth=1000)
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue")
#Third, let's get the Mean and Median by Day
hist
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps",binwidth=1000)
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue")
hist
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps")
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000)
hist
rm(hist)
hist<-qplot(steps,data=activity.byDay,geom="histogram",main="Steps per Day",xlab="Steps")
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000)
hist
hist<-ggplot(data=activity.byDay,main="Steps per Day",xlab="Steps", aes(x=steps))
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000)
hist
hist<-ggplot(data=activity.byDay,main="Steps per Day",xlab="booga", aes(x=steps))
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000)
hist
hist<-ggplot(data=activity.byDay,main="Steps per Day", aes(x=steps))
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000,xlab="booga")
hist
hist<-ggplot(data=activity.byDay,main="Steps per Day", aes(x=steps))
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) + xlab("booga")
hist
hist<-ggplot(data=activity.byDay,main="Steps per Day", aes(x=steps))
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) + xlab("Steps")
hist
activity.byInt <- ddply(activity,.(interval),summarize,steps=mean(steps,na.rm=TRUE))
#Second, let's look at what we have
line<-qplot(data=activity.byInt,x=interval,y=steps,group=1,geom="line")
line
time<-100
as.Time(100)
as.time(100)
?min2human
?sec2human
100\60
100%60
100/60
int<-100
int%%60
paste(int%/%60,":",int%%40)
paste(int%/%60,":",int%%40,sep="")
as.ITime(paste(int%/%60,":",int%%40,sep=""))
as.ITime(paste(int%/%60,":",int%%40,":00",sep=""))
t<-paste(int%/%60,":",int%%40,":00",sep="")
t
library(chron)
install.packages("chron")
library(chron)
t
times(t)
activity.byInt <- ddply(activity,.(interval),summarize,steps=mean(steps,na.rm=TRUE))
head(activity.byInt)
intervalTimes <- times(paste(activity.byInt$interval%/%60,":",activity.byInt$interval%%40,":00",sep=""))
intervalTimes
plot(intervalTimes,activity.byInt$steps)
activity.byInt <- ddply(activity,.(interval),summarize,steps=mean(steps,na.rm=TRUE))
#Second, let's look at what we have
line<-qplot(data=activity.byInt,x=interval,y=steps,group=1,geom="line")
line
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps[maxIndex]
maxIntvl <- activity.byInt$interval[maxIndex]
as.integer(c(maxIndex,maxSteps,maxIntvl))
#So index 104, interval 835 for 206.17 steps, which correponds to the time
paste(maxIntvl%/%60,maxIntvl%%60,sep=":")
maxIntvl<-2000
paste(maxIntvl%/%60,maxIntvl%%60,sep=":")
summary(activity.byInt)
activity.byInt$interval
2355%/%60
?format
activity <- read.csv("activity.csv")
summary(activity) #What are we looking at here?
activity$date <- as.Date(as.character(activity$date))
class(activity$interval)
?as.posixct
?as.POSIXct
?formatC
formatC(activity$interval,wid=3,fla="0")
head(formatC(activity$interval,wid=4,fla="0"))
x<-head(formatC(activity$interval,wid=4,fla="0"))
head(x)
x
as.POSIXct(x)
?as.POSIXct
as.POSIXct(x,"%H%M")
Sys.time()
times(x)
?gsub
y<-gsub('^([a-z]{3})([a-z]+)$', '\\1:\\2', x)
y
y<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2', x)
y
as.POSICxt(y)
times(y)
?times
times(y,format="%H:%M")
as.POSIXct(y,"%H:%M")
y<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', x)
y
asPOSIXct(y,"%H:%M:%S")
as.POSIXct(y,"%H:%M:%S")
times(y)
times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', activity$interval))
activity$interval <- times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', activity$interval))
activity.byInt <- ddply(activity,.(interval),summarize,steps=mean(steps,na.rm=TRUE))
#Second, let's look at what we have
line<-qplot(data=activity.byInt,x=interval,y=steps,group=1,geom="line")
line
#Third, find the maximum average interval
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps[maxIndex]
maxIntvl <- activity.byInt$interval[maxIndex]
as.integer(c(maxIndex,maxSteps,maxIntvl))
#Assume we've got the correct working directory.
library(ggplot2);library(plyr);library(chron) #using these later
activity <- read.csv("activity.csv")
summary(activity) #What are we looking at here?
activity$date <- as.Date(as.character(activity$date))
activity$interval <- times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', activity$interval))
activity$interval
head(activity.byInt)
activity <- read.csv("activity.csv")
summary(activity) #What are we looking at here?
activity$date <- as.Date(as.character(activity$date))
x<-times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', activity$interval)
)
x
head(x)
head(activity$interval)
x<-times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', formatC(activity$interval,wid=4,fla="0"))
)
head(x)
activity$interval <- times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', formatC(activity$interval,wid=4,fla="0")))
#First, let's get summarize the daily data into something overtime
activity.byInt <- ddply(activity,.(interval),summarize,steps=mean(steps,na.rm=TRUE))
#Second, let's look at what we have
line<-qplot(data=activity.byInt,x=interval,y=steps,group=1,geom="line")
line
#Third, find the maximum average interval
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps[maxIndex]
maxIntvl <- activity.byInt$interval[maxIndex]
as.integer(c(maxIndex,maxSteps,maxIntvl))
line<-qplot(data=activity.byInt,x=seq_along(interval),y=steps,group=1,geom="line")
line
as.integer(c(maxIndex,maxSteps,maxIntvl))
head(activity.byInt$interval)
head(activity.byInt)
activity.byInt
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps[maxIndex]
maxIntvl <- activity.byInt$interval[maxIndex]
as.integer(c(maxIndex,maxSteps,maxIntvl))
activity.byInt$interval[1:3]
activity.byInt$interval[104]
c(maxIndex,maxSteps,maxIntvl)
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps[maxIndex]
maxIntvl <- activity.byInt$interval[maxIndex]
c(maxIndex,maxSteps,maxIntvl)
maxIntvl
line<-qplot(data=activity.byInt,x=seq_along(interval),y=steps,group=1,geom="line") + xlab("Time (5-minute interval)")
line
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps; maxSteps
maxSteps <- activity.byInt$steps[maxIndex]; maxSteps
maxIntvl <- activity.byInt$interval[maxIndex]; maxIntvl
#How many NA Values do we have?
sum(is.na(activity$steps))
#Strategy for filling in NA Value: mean of previous and subsequent intervals
rm(activity_sansNA)
rm(activity_sansNA)
activity_sansNA <- activity
for (i in 1:nrow(activity_sansNA)) {
if (is.na(activity_sansNA$steps[i])) {
preVal <- activity_sansNA$steps[i-1]
nxtVal <- activity_sansNA$steps[i+1]
newVal <- mean(c(preVal,nxtVal),na.rm=TRUE)
if (is.nan(newVal)) {activity_sansNA$steps[i] <- 0}
else {activity_sansNA$steps[i] <- newVal}
}
}
summary(activity_sansNA)
#First, let's get the data aggregated by day
activity.byDay2 <- ddply(activity_sansNA,.(date),summarize,steps=sum(steps))
#Second,Let's look at what we have
head(activity.byDay2)
hist2<-ggplot(data=activity.byDay2,main="Steps per Day", aes(x=steps))
hist2<-hist2+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) + xlab("Steps")
hist
#Third, let's get the Mean and Median by Day
mean(activity.byDay2$steps,na.rm=TRUE)
median(activity.byDay2$steps,na.rm=TRUE)
hist2
line2<-qplot(data=activity.byInt2,x=interval,y=steps,geom="line",color=isweekend)
line2
#First, add a column for weekend vs weekday
isweekend<-factor(weekdays(as.Date(activity_sansNA$date)) %in% c('Saturday','Sunday'),labels=c("Weekend","Weekday"))
activity_sansNA<-cbind(activity_sansNA,isweekend)
#Second, sum up steps
activity.byInt2 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
#And plot it
line2<-qplot(data=activity.byInt2,x=interval,y=steps,geom="line",color=isweekend)
line2
activity.byInt2 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,mean)
#And plot it
line2<-qplot(data=activity.byInt2,x=interval,y=steps,geom="line",color=isweekend) + xlab("Time (5-minute interval)")
line2
activity.byInt3 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
#And plot it
line3<-qplot(data=activity.byInt2,x=interval,y=steps,geom="line",color=isweekend) + xlab("Time (5-minute interval)")
line3
activity.byInt3 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
#And plot it
line3<-qplot(data=activity.byInt2,x=seq_along(interval),y=steps,geom="line",color=isweekend) + xlab("Time (5-minute interval)")
line3
activity.byInt3 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
#And plot it
line3<-qplot(data=activity.byInt2,x=seq_along(interval),y=steps,geom="line",color=isweekend) + xlab("Time (5-minute interval)")
line3
activity.byInt2 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,mean)
#And plot it
line2<-qplot(data=activity.byInt2,x=seq_along(interval),y=steps,geom="line",color=isweekend) + xlab("Time (5-minute interval)")
line2
activity_sansNA<-cbind(activity_sansNA,isweekend)
activity_sansNA
dir.create("./figures")
setwd("./figures")
png(file="Figure1.png"); hist; dev.off()
png(file="Figure2.png"); line; dev.off()
png(file="Figure3.png"); hist2; dev.off()
png(file="Figure4.png"); line2; dev.off()
png(file="Figure5.png"); line3; dev.off()
source('~/.active-rstudio-document', echo=TRUE)
if (file.exists("./figures")){setwd("./figures")}
else {
dir.create("./figures")
setwd("./figures")
}
png(file="Figure1.png"); hist; dev.off()
png(file="Figure2.png"); line; dev.off()
png(file="Figure3.png"); hist2; dev.off()
png(file="Figure4.png"); line2; dev.off()
png(file="Figure5.png"); line3; dev.off()
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("..")
getwd()
setwd("..")
source('~/.active-rstudio-document', echo=TRUE)
getwd()
list.files()
getwd()
activity.byInt3 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
summary(activity.byInt3)
#Assume we've got the correct working directory.
library(ggplot2);library(plyr);library(chron) #using these later
activity <- read.csv("activity.csv")
summary(activity) #What are we looking at here?
activity$date <- as.Date(as.character(activity$date))
activity$interval <- times(gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2:00', formatC(activity$interval,wid=4,fla="0")))
#First, let's get the data aggregated by day
activity.byDay <- ddply(activity,.(date),summarize,steps=sum(steps))
#Second,Let's look at what we have
head(activity.byDay)
hist<-ggplot(data=activity.byDay,
main="Steps per Day",
sub="Fig1",
aes(x=steps))
hist<-hist+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) + xlab("Steps")
hist
#Third, let's get the Mean and Median by Day
mean(activity.byDay$steps,na.rm=TRUE)
median(activity.byDay$steps,na.rm=TRUE)
#First, let's get summarize the daily data into something overtime
activity.byInt <- ddply(activity,.(interval),summarize,steps=mean(steps,na.rm=TRUE))
#Second, let's look at what we have
line<-ggplot(data=activity.byInt,
x=seq_along(interval),
y=steps,group=1,geom="line",
main="Activity throughout the Day",
sub="Fig2.") + xlab("Time (5-minute interval)")
line
#Third, find the maximum average interval
maxIndex <- which.max(activity.byInt$steps)
maxSteps <- activity.byInt$steps[maxIndex]; maxSteps
maxIntvl <- activity.byInt$interval[maxIndex]; maxIntvl
line<-qplot(data=activity.byInt,
x=seq_along(interval),
y=steps,group=1,geom="line",
main="Activity throughout the Day",
sub="Fig2.") + xlab("Time (5-minute interval)")
line
hist<-ggplot(data=activity.byDay,
hist<-hist+
geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) +
xlab("Steps") +
ggtitle(expression(atop("Activity Distribution by Day"),atop("Fig1."))
hist
hist<-ggplot(data=activity.byDay,
aes(x=steps))
hist<-hist+
geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) +
xlab("Steps") +
ggtitle(expression(atop("Activity Distribution by Day"),atop("Fig1.")))
hist
hist<-ggplot(data=activity.byDay,
aes(x=steps))
hist<-hist+
geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) +
xlab("Steps") +
ggtitle(expression(atop("Activity Distribution by Day"),atop("Fig1."),""))
hist
hist<-ggplot(data=activity.byDay,
aes(x=steps))
hist<-hist+
geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) +
xlab("Steps") +
ggtitle(expression(atop("Activity Distribution by Day"),atop(italic("Fig1."),"")))
hist
hist<-ggplot(data=activity.byDay,
aes(x=steps))
hist<-hist+
geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) +
xlab("Steps") +
ggtitle("Activity Distribution by Day \n Fig1.")
hist
line<-qplot(data=activity.byInt,
x=seq_along(interval),
y=steps,group=1,geom="line",
sub="Fig2.") +
xlab("Time (5-minute interval)") +
ggtitle("Fig2. Activity throughout the Day")
line
head(activity_sansNA)
activity.byInt2 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,mean)
activity.byInt2
activity.byInt2$isweekend<-NULL
activity.byInt2
head(activity.byInt2)
activity_sansNA<-cbind(activity_sansNA,isweekend)
#How many NA Values do we have?
sum(is.na(activity$steps))
#Strategy for filling in NA Value: mean of previous and subsequent intervals
rm(activity_sansNA)
rm(activity_sansNA)
activity_sansNA <- activity
for (i in 1:nrow(activity_sansNA)) {
if (is.na(activity_sansNA$steps[i])) {
preVal <- activity_sansNA$steps[i-1]
nxtVal <- activity_sansNA$steps[i+1]
newVal <- mean(c(preVal,nxtVal),na.rm=TRUE)
if (is.nan(newVal)) {activity_sansNA$steps[i] <- 0}
else {activity_sansNA$steps[i] <- newVal}
}
}
summary(activity_sansNA)
#First, let's get the data aggregated by day
activity.byDay2 <- ddply(activity_sansNA,.(date),summarize,steps=sum(steps))
#Second,Let's look at what we have
head(activity.byDay2)
hist2<-ggplot(data=activity.byDay2,
aes(x=steps))
hist2<-hist2+geom_histogram(colour="darkblue",fill="lightblue", binwidth=1000) + xlab("Steps") + ggtitle("Fig3. Steps per Day")
hist2
#Third, let's get the Mean and Median by Day
mean(activity.byDay2$steps,na.rm=TRUE)
median(activity.byDay2$steps,na.rm=TRUE)
head(activity_sansNA)
isweekend<-factor(weekdays(as.Date(activity_sansNA$date)) %in% c('Saturday','Sunday'),labels=c("Weekend","Weekday"))
activity_sansNA
head(activity_sansNA)
head(isweekend)
activity_sansNA<-cbind(activity_sansNA,isweekend)
head(activity_sansNA)
activity.byInt2 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,mean)
line2<-qplot(data=activity.byInt2,
x=seq_along(interval),
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig4. Activity throughout the Day") +
xlab("Time (5-minute interval)")
line2
line<-qplot(data=activity.byInt,
x=seq_along(interval),
y=steps,group=1,geom="line") +
xlab("Time (5-minute interval)") +
ggtitle("Fig2. Activity throughout the Day")
line
activity.byInt3 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
#And plot it
line3<-qplot(data=activity.byInt2,
x=interval,
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig5. Activity throughout the Day") +
xlab("Time (5-minute interval)")
line3
line3<-qplot(data=activity.byInt2,
x=seq_along(interval),
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig5. Activity throughout the Day") +
xlab("Time (5-minute interval)")
line3
line2<-qplot(data=activity.byInt2,
x=interval,
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig4. Activity throughout the Day") +
xlab("Time (5-minute interval)")
line2
line3<-qplot(data=activity.byInt3,
x=interval,
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig5. Activity throughout the Day") +
xlab("Time (5-minute interval)")
line3
activity.byInt3 <- aggregate(steps ~ interval + isweekend,data=activity_sansNA,sum)
#And plot it
line3<-qplot(data=activity.byInt3,
x=interval,
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig5. Activity throughout the Day") +
xlab("Time (5-minute interval)") +
scale_y_continuous(labels=c("00:00","06:00","12:00","18:00","24:00"))
line3
line3<-qplot(data=activity.byInt3,
x=interval,
y=steps,geom="line",
color=isweekend) +
ggtitle("Fig5. Activity throughout the Day") +
xlab("Time (5-minute interval)") +
scale_x_continuous(labels=c("00:00","06:00","12:00","18:00","24:00"))
line3
?round
eightThirty<-times("08:30:00")
eightThirty
eightThirty+5
eightThirty+times("00:05:00")
png(file="Figure4.png"); line2; dev.off()
if (file.exists("./figures")) {setwd("./figures")}
else {dir.create("./figures") ; setwd("./figures")}
png(file="Figure1.png"); hist; dev.off()
png(file="Figure2.png"); line; dev.off()
png(file="Figure3.png"); hist2; dev.off()
png(file="Figure4.png"); line2; dev.off()
# png(file="Figure5.png"); line3; dev.off()
getwd()
setwd("..")
file.exists("./figures")
file.exists("./figures")
getwd()
